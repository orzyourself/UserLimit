1.关于使用EF和自带的Json序列化器出现的循环引用问题。
解决方法：1.映射的时候选择性的选出你需要序列化的属性，把不需要的排除即可。
         2.使用第三方的Json序列库，这里就使用Newtonsoft.Json，然后自己去封装几个类，调用即可，然后在类那边，
		  给导航属性添加[JsonIgnore]去忽视掉导航属性，这样序列化的时候就不会将其系列化进去，这样也是可以正确序列化的。
		  但是一定要注意，使用那个的话就不可以使用系统自带的Json去序列化了，因为已经序列化过了，再序列化的话就是多余的
		  了，所以直接调用Content()方法返回即可。
2.关于jquery easyui里面的datagrid控件使用问题。
需注意：里面很多都是采用默认的参数，也就是说传递的参数都是事先规定好的，所以你必须按照他的要求给他传递值，这样才能够正确的
        传递和接收值，才能正确的显示出结果，至于能不能通过配置去改变其值，我觉得其实不太重要，既然有这个规定，那就按照
		规定办事，遵守规定，这样效率难道不是更高么？
3.关于ajax返回值的定义。
需要自己预先定义一套规则，然后封装成Json数据，每次都返回那套状态码，实现规范的准则。
4.关于数据的检查。
客户端方面：客户端那边进行的检查是为了让访问更加符合人性化，更加的合理，但是客户端验证往往都是不能相信的，所以我们必须要有服务端验证。
服务端方面：服务端需要进行几方面的验证，首先是确保不能为空，因为如果是空的话就会出现异常，这是不科学的。
           其次是，如果不为空，还需要对他的值进行验证。但是面对数据验证，mvc框架有他自己的一套，模型绑定，模型验证，但是如果你要使用模型绑定，
		   模型验证，你就需要去属性那边写数据注解，然后还得使用模型绑定，当然可以用自动绑定或者手动绑定。这是一次验证，要和数据库那边的规则匹配起来，
		   然后这样出错就会少了，然后数据库那边要用到约束，还得用到事务，这样相对来说呢就会安全很多了。
		   但是现在我们先不用框架自带的那一套，我们需要自己去实现，所以你的思绪要很有条理，很有逻辑。